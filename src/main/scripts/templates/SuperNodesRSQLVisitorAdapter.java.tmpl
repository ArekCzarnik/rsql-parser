// generated by generateAst.groovy
package <%= packageName %>;

/**
 * An adapter for the {@link RSQLVisitor} interface that delegates handling of
 * all the concrete nodes to {@link #visit(LogicalNode, Object)} and
 * {@link #visit(ComparisonNode, Object)}.
 *
 * <p>This class is useful when you don't want to handle all of the nodes (i.e.
 * implement <tt>visit()</tt> methods), but just few of them and take care of
 * the rest in the superclass nodes' handler.
 *
 * @param <R> Return type of the visitor's method.
 * @param <A> Type of an optional parameter passed to the visitor's method.
 */
public abstract class <%= className %><R, A> implements RSQLVisitor<R, A> {

    public abstract R visit(LogicalNode node, A param);

    public abstract R visit(ComparisonNode node, A param);

<% logicalNodes.each { name -> %>
    @Override public R visit(<%= name %> node, A param) {
        return visit((LogicalNode) node, param);
    }
<% } %>
<% comparisonNodes.each { name, _ -> %>
    @Override public R visit(<%= name %> node, A param) {
        return visit((ComparisonNode) node, param);
    }
<% } %>
}
